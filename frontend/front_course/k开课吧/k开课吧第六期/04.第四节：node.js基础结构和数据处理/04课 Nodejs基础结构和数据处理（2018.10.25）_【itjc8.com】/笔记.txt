node.js
http

response.write();
response.end();

---------------------------------------------

同步：
异步：

---------------------------------------------

http
fs

---------------------------------------------

服务器：
1.响应请求
2.数据交互
3.数据库

---------------------------------------------

数据交互

HTTP——协议

---------------------------------------------

HTTP 1.0 RFC-1945
HTTP 1.1 RFC-2616   持久连接
HTTPS    RFC-2818   安全协议
HTTP 2.0 RFC-7540   加密、头部压缩、服务器推送、管线操作、多路复用

---------------------------------------------

http报文结构
header
body

---------------------------------------------

状态码：
1xx 信息
2xx 成功
3xx 重定向
4xx 请求错误
5xx 服务器错误

---------------------------------------------

请求方式：
GET   获取
  数据放在url里面传输的
  1.容量小<=32K

POST  发送数据
  1.容量大

---------------------------------------------

接收浏览器的GET数据——url
url模块
url.parse(req.url, true)=>{
  pathname, query
}

GET=>"/aaa/b?xx=xxx&xxx=xx"
url.parse('xx')

---------------------------------------------

接收浏览器的POST数据——body
分几次
let arr=[];
req.on('data', buffer=>{
  arr.push(buffer);
});
req.on('end', ()=>{
  let buffer=Buffer.concat(arr);
})

POST=>"xx=xxx&xxx=xx"
querystring.parse('xx')

---------------------------------------------

http原理
fs.writeFile/readFile
url.parse
querystring.parse

---------------------------------------------

接口-API：
用户注册、登录

服务器：
1.请求文件->结果
2.请求接口->操作

---------------------------------------------

注册接口：
/reg?username=xxx&password=xxx
=>{error: 1, msg: '为什么'}

登录接口：
/login?username=xxx&password=xxx
=>{error: 1, msg: 'xx'}

---------------------------------------------

http
fs
url
querystring

解析数据：GET、POST

完整的服务器：
1.处理文件
2.处理接口
3.存储数据

---------------------------------------------

模块：
1.系统
2.第三方

---------------------------------------------

Node.js的模块系统
1.定义模块
  module    批量导出
  exports
  require

  require：
  1.如果带有路径——去路径下面找
  2.如果没有：
    node_modules文件夹
    系统node_modules
